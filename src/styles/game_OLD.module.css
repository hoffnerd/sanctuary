


/* ______________________________________________________________________________________ */
/* ===== Game Grid ===== */

.gameGrid{
    --corePadding: 1rem;
    --corePaddingDoubled: 2rem;
    --columnHeight: 85vh;
    
    display: grid;
    padding-left: var(--corePadding);
    padding-right: var(--corePadding);
}

.gameGrid.desktop{
    grid-template-columns: repeat(8, minmax(0, 1fr));
}

.gameGrid.tablet{
    grid-template-columns: repeat(6, minmax(0, 1fr));
}

.gameGrid.mobile{
    grid-template-columns: repeat(1, minmax(0, 1fr));
}


@media only screen and (max-height: 811px){
    .gameGrid{
        --columnHeight: 83vh;
    }
}

@media only screen and (max-height: 720px){
    .gameGrid{
        --columnHeight: 80vh;
    }
}

@media only screen and (max-height: 610px){
    .gameGrid{
        --columnHeight: 78vh;
    }
}

@media only screen and (max-height: 555px){
    .gameGrid{
        --columnHeight: 75vh;
    }
}

@media only screen and (max-height: 490px){
    .gameGrid{
        --columnHeight: 70vh;
    }
}

@media only screen and (max-height: 405px){
    .gameGrid{
        --columnHeight: 65vh;
    }
}

@media only screen and (max-height: 350px){
    .gameGrid{
        --columnHeight: 60vh;
    }
}

@media only screen and (max-height: 305px){
    .gameGrid{
        --columnHeight: 55vh;
    }
}


/* ______________________________________________________________________________________ */
/* ===== Sections ===== */

.gameGrid .sidebarLeft{
    padding: var(--corePadding);
    height: var(--columnHeight);
    max-height: var(--columnHeight);

    grid-column-start: 1;
    grid-column-end: span 2;
}

.gameGrid .center{
    padding: var(--corePadding);
    height: var(--columnHeight);
    
    grid-column-start: 3;
    grid-column-end: span 4;
}

.gameGrid.mobile .center{
    padding: var(--corePadding) 0px;
    height: calc(var(--columnHeight) - (var(--corePadding) * 3));
    
    grid-column-start: 1;
    grid-column-end: span 1;
}

.gameGrid.desktop .sidebarRight{
    padding: var(--corePadding);
    height: var(--columnHeight);
    
    grid-column-start: 7;
    grid-column-end: span 2;
}

.gameGrid .bottomBar{
    padding: var(--corePadding);
    max-height: var(--columnHeight);
}

.gameGrid.desktop .bottomBar{
    grid-column-start: 1;
    grid-column-end: span 8;
}

.gameGrid.tablet .bottomBar{
    grid-column-start: 1;
    grid-column-end: span 6;
}


/* @media only screen and (min-width: 992px){
    .gameGrid.desktop .center{
        grid-column-end: span 6;
    }

    .gameGrid.desktop .sidebarRight{
        grid-column-start: 3;
        grid-column-end: span 4;
    }
} */

.gameGrid .panel{
    --_panelMinHeight: var(--panelMinHeight, 50px);
    --_panelHeight: var(--panelHeight, 100%);
    
    border-width: 5px;
    border-style: solid;
    border-radius: 25px;
    min-height: var(--_panelMinHeight);
    height: var(--_panelHeight);
    overflow: hidden;
    transition: all 0.5s ease-out;
}

.gameGrid .panel .content{
    height: 100%;
    padding: 10px;
    overflow: auto;
}

.gameGrid .panel.notifications{
    
}

.gameGrid .panel.resources{
    --panelHeight: var(--_panelMinHeight);
}


.gameGrid.tablet .panel.mercs{
    --panelHeight: calc(50% - var(--_panelMinHeight) - var(--corePadding));
}

.gameGrid.desktop .panel.contracts{
    --panelHeight: calc(100% - var(--_panelMinHeight) - var(--corePaddingDoubled));
}

.gameGrid.tablet .panel.contracts{
    --panelHeight: calc(50% - var(--_panelMinHeight));
}



/* ______________________________________________________________________________________ */
/* ===== Notifications ===== */

.notification{
    padding: 10px 0px;
}



/* ______________________________________________________________________________________ */
/* ===== Resources ===== */

.resourcesGrid{
    display: grid;
    grid-template-columns: repeat(4, minmax(0, 1fr));
    height: 100%;
}

.resourcesGrid .resourcesGridColumn{
    height: 100%;
}

.resourcesGrid .border{
    border-right-width: 3px;
}

.resourcesGrid .resourcesGridColumn .table {
    display: table;
    height: 100%;
    width: 100%;
}
.resourcesGrid .resourcesGridColumn .table .cell{
    display: table-cell;
    vertical-align: middle;
}



/* ______________________________________________________________________________________ */
/* ===== Notifications ===== */

.contractsGrid{
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    gap: 0.5rem;
}

@media only screen and (max-height: 1150px){
    .contractsGrid{
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }
}